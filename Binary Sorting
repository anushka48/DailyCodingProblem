# You are given an array of decimal integers. Rearrange the array according to the following rules:

# Sort the integers in ascending order of the number of ‘1’s in their binary representations.
# For elements having the same number of ‘1’s, sort them in ascending order of their decimal values.

import functools

# def decToBin(num):
#     binary = ""
#     #42 =  1_ 0_ 1_ 0_ 1_ 0_
#     #0, 1, 0, 1, 0, 1
    
#     #39 = 1_ 0_ 0_ 1_ 1_ 1_
#     #%1  1  1  0  0  1
#     #/19 9  4  2  1  0
#     # 1, 1, 1, 0, 0, 1
#     while(num >= 1):
#         binary+=str(num%2)
#         num//=2
#     return ((binary[::-1]))

def compare(item1, item2):
    item1_str = str(item1)
    item2_str = str(item2)
    if (item1_str.count("1") < item2_str.count("1")):
        return -1
    elif (item1_str.count("1") > item2_str.count("1")):
        return 1
    else:
        if (int(item1, 2) > int(item2, 2)):
            return 1
        elif (int(item1, 2) < int(item2, 2)):
            return -1
        else:
            return 0

def sortByBin(arr):
    binary = []
    for i in range(len(arr)):
        arr[i] = bin(arr[i])
    arr.sort(key = functools.cmp_to_key(compare))
    for i in range(len(arr)):
        arr[i] = int(arr[i], 2)
    return arr
print("final: ", sortByBin([1, 2, 3, 4, 5]))
