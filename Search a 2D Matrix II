# Write an efficient algorithm that searches for a value target in an m x n integer matrix matrix. This matrix has the following properties:

# Integers in each row are sorted in ascending from left to right.
# Integers in each column are sorted in ascending from top to bottom.
class Solution:
    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:
        x = len(matrix)-1
        y = 0
        while True:
            if x < 0 or y == len(matrix[0]):
                break
            if (matrix[x][y] == target):
                return True
            if target < matrix[x][y]:
                x -= 1
            else:
                y += 1
        return False       
