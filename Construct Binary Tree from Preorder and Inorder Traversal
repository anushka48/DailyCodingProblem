# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
# Given two integer arrays preorder and inorder where preorder is the preorder traversal of a binary tree and inorder is the inorder traversal of the same tree, construct and return the binary tree.
class Solution:
    def buildTree(self, preorder: List[int], inorder: List[int]) -> Optional[TreeNode]:
        if (len(inorder) == 1):
            preorder.remove(inorder[0])
            return TreeNode(val = inorder[0])
        elif (len(inorder) == 0):
            return None
        root = TreeNode(val = preorder[0])
        idx = inorder.index(root.val)
        preorder.remove(preorder[0])
        root.left = self.buildTree(preorder, inorder[0:idx])
        root.right = self.buildTree(preorder, inorder[idx+1:])
        return root        
        
