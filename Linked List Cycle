# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None
# Given head, the head of a linked list, determine if the linked list has a cycle in it.

class Solution:
    def hasCycle(self, head: Optional[ListNode]) -> bool:
        while head != None:
            if (head.val == 'a'):
                return True
            else:
                head.val = 'a'
            head = head.next

        return False
