#nlogn solution - sort and compare

#take in strings
one = input("enter first string: ")
two = input("enter second string: ")

#declare return value
isAnagram = False;

#linear solution - use buckets and see if buckets contain same value
  #can a hashmap optimize?
  #yes - use get and put to increment the count of each var  
#constant time?

if (len(one) == len(two) and len(one) != 0):
  one = one.lower()
  two = two.lower()
  dict1 = dict()
  dict2 = dict()
  # 
  for i in one:
    if (dict1.get(i)):
      dict1[i] = dict1.get(i) + 1
    else:
      dict1[i] = 1
  
  for j in two:
    if (dict2.get(j)):
      dict2[j] = dict2.get(j) + 1
    else:
      dict2[j] = 1
  
  isAnagram = (dict1 == dict2)
else: 
  isAnagram = False

print("isAnagram is: ", isAnagram)
#solve substring anagram problem
