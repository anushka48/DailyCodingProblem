# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

# Given the root of a binary tree, determine if it is a valid binary search tree (BST).
class Solution:
    trav = []
    def isValidBST(self, root: Optional[TreeNode]) -> bool:
        self.trav = []
        self.inOrder(root)
        if (len(self.trav) <= 1):
            return True
        prev = self.trav[0]
        for i in range(1, len(self.trav)):
            if self.trav[i] <= prev:
                return False
            prev = self.trav[i]
        return True

    def inOrder(self,root):
        if (not root):
            return
        self.inOrder(root.left)
        self.trav.append(root.val)
        self.inOrder(root.right)
