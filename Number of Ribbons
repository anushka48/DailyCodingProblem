# You are given an integer array ribbons, where ribbons[i] represents the length of the i-th ribbon, and an integer k. You may cut any of the ribbons into any number of segments of positive integer lengths, or perform no cuts at all.
# Your goal is to obtain k ribbons of all the same positive integer length. You are allowed to throw away any excess ribbon as a result of cutting.
# Return the maximum possible positive integer length that you can obtain k ribbons of, or 0 if you cannot obtain k ribbons of the same length.

from typing import List
# ret number of ribbons possible w/ length 
def maxLenRibbons(ribbons: List, length: int) -> int:
    numRibbons = 0 #3
    for r in ribbons:
        numRibbons += (r // length)
    return numRibbons

def cutRibbons(ribbons: List, k: int) -> int:
    start = 1 #1
    end = max(ribbons) #0
    maxLen = 0 #

    while (start <= end):
        mid = (start + end) // 2 #1
        numRib = maxLenRibbons(ribbons, mid)  #3
        if numRib >= k: #
            if (mid > maxLen):
                maxLen = mid 
            start = mid + 1
        else:
            end = mid - 1

    return maxLen

ribbons = [9]
k = 10
print(cutRibbons(ribbons, k))
