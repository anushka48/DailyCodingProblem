from typing import (
    List,
)
from collections import defaultdict

class SparseVector:
    # Your SparseVector object will be instantiated and called as such:
    # v1 = SparseVector(nums1)
    # v2 = SparseVector(nums2)
    # ans = v1.dot_product(v2)
    def __init__(self, nums: List[int]):
        # do intialization here
        stor = defaultdict()
        for i in range(len(nums)):
            if (nums[i] != 0):
                stor[i] = nums[i]
        self.vector = stor
        

    # Return the dotProduct of two sparse vectors
    def dot_product(self, vec: "SparseVector") -> int:
        # write your code here
        ret = 0
        for e in self.vector.keys():
            if (vec.vector.get(e)):
                ret += (vec.vector.get(e) * self.vector.get(e))
        return ret
        
nums1 = [1,0,0,0]
nums2 = [0,0,2,0]
v1 = SparseVector(nums1)
v2 = SparseVector(nums2)
ans = v1.dot_product(v2)
print(ans)
