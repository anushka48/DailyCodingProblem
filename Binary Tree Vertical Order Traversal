# Given the root of a binary tree, calculate the vertical order traversal of the binary tree.

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
from collections import defaultdict 

class Solution:
    def verticalTraversal(self, root: Optional[TreeNode]) -> List[List[int]]:
        ctr = 0
        coords = defaultdict(list)
        coords[0].append(root.val)
        def traverseTree(node, ctr):
            if (node == None):
                return
            if (node.left):
                coords[ctr - 1].append(node.left.val)
                traverseTree(node.left, ctr-1)
            if (node.right):
                coords[ctr + 1].append(node.right.val)
                traverseTree(node.right, ctr+1)               
        traverseTree(root,ctr)
        coords = sorted(coords.items(), key = lambda x:x[0])
        ret = []
        for e in coords:
            ret.append(e[1])
        return(ret)
        
