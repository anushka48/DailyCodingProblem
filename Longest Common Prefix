# Write a function to find the longest common prefix string amongst an array of strings.

# If there is no common prefix, return an empty string "".
from collections import defaultdict

class Node:
    def __init__(self, letter):
        self.letter = letter
        self.elements = defaultdict()

class Solution:
    def longestCommonPrefix(self, strs: List[str]) -> str:
        head = Node(None)
        for word in strs:
            if word == "":
                return ""
            cur = head
            for l in word:
                if cur.elements.get(l):
                    cur = cur.elements[l]
                else:
                    newNode = Node(l)
                    cur.elements[l] = newNode
                    cur = newNode
            newNode = Node("*")
            cur.elements["*"] = newNode
            cur = newNode
        ret = ""
        while len(head.elements) == 1:
            letter = list(head.elements.keys())[0]
            if letter != "*":
                ret += letter
            head = head.elements[letter]
        return ret
