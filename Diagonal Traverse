# Given an m x n matrix mat, return an array of all the elements of the array in a diagonal order.

# SOLUTION 1
from collections import defaultdict
class Solution:
    def findDiagonalOrder(self, mat: List[List[int]]) -> List[int]:
        idx = defaultdict(list)
        m = len(mat)
        n = len(mat[0])
        for i in range(m):
            for j in range(n):
                idx[i+j].append((i, j))
        ret = []
        for i in range(m+n):
            cur = idx.get(i)
            if (not cur):
                break
            if (i %2 == 0):
                for i in range(len(cur)-1, -1, -1):
                    ret.append(mat[cur[i][0]][cur[i][1]])
            else:
                for i in range(len(cur)):
                    ret.append(mat[cur[i][0]][cur[i][1]])
        return ret

                    
# SOLUTION 2: Simpler
class Solution:
    def findDiagonalOrder(self, mat: List[List[int]]) -> List[int]:
        diags = defaultdict(list) #[0: [1], 1: (2, 11), 2:(3,12,21)]
        trav = [] #1, 2, 11
        for i in range(len(mat)):
            for j in range(len(mat[0])):
                diags[i+j].append(mat[i][j])
        rev = True
        for i in range(len(mat)-1 + len(mat[0])-1 + 1):
            if rev:
                diags[i].reverse()
            trav.extend(diags.get(i))
            rev = not rev
        return trav
