#You are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]).

#Find two lines that together with the x-axis form a container, such that the container contains the most water.

#Return the maximum amount of water a container can store.

#Notice that you may not slant the container.

class Solution(object):
    def maxArea(self, height):
        """
        :type height: List[int]
        :rtype: int
        """
        p1 = 0                  #pointer 1 points to first index
        p2 = len(height)-1      #pointer 2 points to last index
        max = 0
        
        while p1 != p2:
            volume = min(height[p1], height[p2]) * (p2-p1)
            if (volume > max):
                max = volume
            if height[p1] > height[p2]:
                #keep p1
                p2 -= 1
            else: 
                #keep p2
                p1 += 1
        return max
                
        
        
