# Insert newInterval into intervals such that intervals is still sorted in ascending order by starti and intervals still does not have any overlapping intervals (merge overlapping intervals if necessary).
class Solution:
    def insert(self, intervals: List[List[int]], newInterval: List[int]) -> List[List[int]]:
        # iterate through interval while the start is still greater
        # merge intervals
        i = 0
        if (len(intervals) < 1):
            intervals.append(newInterval)
            return intervals

        while (i < len(intervals) and intervals[i][0] < newInterval[0]):
            i+=1

        intervals.insert(i, newInterval)
        if (i-1 >= 0):
            if (self.overlap(intervals[i-1], intervals[i])):
                intervals[i] = [intervals[i-1][0], max(intervals[i-1][1], intervals[i][1])]
                intervals.pop(i-1)
                i-=1
        while (i+1 < len(intervals) and self.overlap(intervals[i], intervals[i+1])):
            intervals[i] = [intervals[i][0], max(intervals[i][1], intervals[i+1][1])]
            intervals.pop(i+1)
        return intervals
                
    def overlap(self, first, last):
        if (first[1] >= last[0]):
            return True
        return False
        
            
        
