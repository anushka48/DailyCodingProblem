# You are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]).

# Find two lines that together with the x-axis form a container, such that the container contains the most water.
class Solution:
    def maxArea(self, height: List[int]) -> int:
        p1 = 0
        p2 = len(height)-1
        maxAmt = 0
        while p1 != p2:
            water = min(height[p1], height[p2]) * (p2 - p1)
            if (water > maxAmt):
                maxAmt = water
            if (height[p1] > height[p2]):
                p2-=1
            else:
                p1+=1
        return maxAmt

        
