# You are given two strings order and s. All the characters of order are unique and were sorted in some custom order previously.

# Permute the characters of s so that they match the order that order was sorted. More specifically, if a character x occurs before a character y in order, then x should occur before y in the permuted string.
class Solution:
    # "cba"
    #abcd
    # "a":1, "b":2, "c":2, "d":1
    def customSortString(self, order: str, s: str) -> str:
        sCtr = Counter(s)
        ordered = ""
        for i in range(len(order)):
            if (sCtr.get(order[i])):
                ordered += (order[i]*sCtr.get(order[i]))
                del sCtr[order[i]]
        for k in sCtr:
            ordered += k*sCtr[k]
        return ordered
